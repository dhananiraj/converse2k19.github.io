{"version":3,"sources":["components/Main.js","components/Events.js","App.js","serviceWorker.js","index.js"],"names":["main","react_default","a","createElement","className","id","style","color","onClick","this","props","toggleEvn","rel","toggleReg","Component","Events","scrollDown","window","scrollBy","scrollUp","direction","down","textAlign","src","alt","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","setState","showEvents","state","showForm","_this2","Main","renderprops","config","duration","items","from","opacity","marginTop","enter","leave","show","web","div","components_Events","React","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fda15237.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass main extends Component {\r\n    render() {\r\n        return (\r\n            \r\n                <section className=\"section section-lg section-hero section-shaped\" id=\"main-section\">\r\n                \r\n                <div className=\"shape shape-style-1 shape-primary\">\r\n                {/* <span className=\"span-150\"></span>\r\n                <span className=\"span-50\"></span>\r\n                <span className=\"span-50\"></span>\r\n                <span className=\"span-75\"></span>\r\n                <span className=\"span-100\"></span>\r\n                <span className=\"span-75\"></span>\r\n                <span className=\"span-50\"></span>\r\n                <span className=\"span-100\"></span>\r\n                <span className=\"span-50\"></span>\r\n                <span className=\"span-100\"></span> */}\r\n                </div>\r\n                <div className=\"container shape-container d-flex align-items-center py-lg\">\r\n                <div className=\"col px-0\">\r\n                    <div className=\"row align-items-center justify-content-center\">\r\n                    <div className=\"col-lg-6 text-center\">\r\n                        {/* <img className=\"img-fluid\" style={{width: '200px'}} alt=\"hello\" src=\"./assets/img/brand/white.png\"/> */}\r\n                        <h1 style={{color: \"white\"}}><b>CONVERSE<br/>2019</b></h1>\r\n                        <p className=\"lead text-white\">converse is an yearly event</p>\r\n                        <div className=\"btn-wrapper mt-5\">\r\n                        <button className=\"btn btn-lg btn-white btn-icon mb-3 mb-sm-0\" onClick={this.props.toggleEvn}>\r\n                            {/* <span className=\"btn-inner--icon\"><i className=\"ni ni-cloud-download-95\"></i></span> */}\r\n                            <span className=\"btn-inner--text\">CHECK OUT EVENTS</span>\r\n                        </button>\r\n                        <br/>\r\n                        <button className=\"btn btn-lg btn-github btn-icon mt-3 mb-sm-0\" rel=\"noopener noreferrer\" onClick={this.props.toggleReg}>\r\n                            {/* <span className=\"btn-inner--icon\"><i className=\"fa fa-github\"></i></span> */}\r\n                            <span className=\"btn-inner--text\">\r\n                            <span className=\"text-warning\">   REGISTER</span> NOW   </span>\r\n                        </button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                \r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default main\r\n","import React, { Component } from 'react'\r\n\r\nclass Events extends Component {\r\n    componentDidMount(){\r\n        \r\n    }\r\n    \r\n    scrollDown = () => {\r\n        window.scrollBy(0,10);\r\n    }\r\n   \r\n    scrollUp = () => {\r\n        window.scrollBy(0,-10);\r\n    }\r\n    \r\n    render() {\r\n      if(this.props.direction.down)\r\n      this.scrollDown()\r\n      else\r\n      this.scrollUp()\r\n        return (\r\n            <section className=\"main\" id = \"events\">\r\n                <br/>\r\n                <div className=\"mt-2 mb-2\" style={{textAlign: \"center\"}}><h2>EVENTS</h2></div>\r\n                <hr className=\"thick\" />\r\n                <div className=\"row pl-3 pr-3\">\r\n                    <div className=\"col-md-4 col-xs-2 mb-5 ml-lg-auto mr-lg-auto mt-5\">\r\n                        <div className=\"card card-lift--hover shadow border-2\">\r\n                            <img className=\"card-img-top\" src=\"...\" alt=\"Card image\" />\r\n                            <div className=\"card-body\">\r\n                                <h3>EVENT NAME</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-xs-2 mb-5 ml-lg-auto mr-lg-auto mt-5\">\r\n                        <div className=\"card card-lift--hover shadow border-2\">\r\n                            <img className=\"card-img-top\" src=\"...\" alt=\"Card image\" />\r\n                            <div className=\"card-body\">\r\n                                <h3>EVENT NAME</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-xs-2 mb-5 ml-lg-auto mr-lg-auto mt-5\">\r\n                        <div className=\"card card-lift--hover shadow border-2\">\r\n                            <img className=\"card-img-top\" src=\"...\" alt=\"Card image\" />\r\n                            <div className=\"card-body\">\r\n                                <h3>EVENT NAME</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-xs-2 mb-5 ml-lg-auto mr-lg-auto mt-5\">\r\n                        <div className=\"card card-lift--hover shadow border-2\">\r\n                            <img className=\"card-img-top\" src=\"...\" alt=\"Card image\" />\r\n                            <div className=\"card-body\">\r\n                                <h3>EVENT NAME</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-xs-2 mb-5 ml-lg-auto mr-lg-auto mt-5\">\r\n                        <div className=\"card card-lift--hover shadow border-2\">\r\n                            <img className=\"card-img-top\" src=\"...\" alt=\"Card image\" />\r\n                            <div className=\"card-body\">\r\n                                <h3>EVENT NAME</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-xs-2 mb-5 ml-lg-auto mr-lg-auto mt-5\" id=\"last\">\r\n                        <div className=\"card card-lift--hover shadow border-2\">\r\n                            <img className=\"card-img-top\" src=\"...\" alt=\"Card image\" />\r\n                            <div className=\"card-body\">\r\n                                <h3>EVENT NAME</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Events\r\n\r\n\r\n\r\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Main from './components/Main';\nimport Events from './components/Events';\nimport {animated} from \"react-spring\";\nimport {Transition} from \"react-spring/renderprops\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       showEvents:false,\n       showForm:false\n    }\n  }\n\n  toggleEvn = e => this.setState({\n    showEvents:!this.state.showEvents\n  });\n\n\n  \n  render(){\n    return (\n      <main>\n      <div className=\"position-relative\">\n        <Main toggleEvn={this.toggleEvn} />\n        {/* <Events /> */}\n\n        <Transition\n          config={{duration: 3000}}\n          items={this.state.showEvents}\n          from={{opacity: 0, marginTop: -500}}\n          enter={{opacity: 1, marginTop: 0}}\n          leave={{opacity: 0, marginTop: -500}}\n        >\n          {\n            show => show && \n            ( props => (\n              <animated.div style={props}>\n                <Events direction={{down: this.state.showEvents}}/>\n              </animated.div>  \n            )) \n          }\n        </Transition>\n\n      </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('wrapper'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}